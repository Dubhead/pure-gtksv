/* Basic Pure GtkSourceView2 example.  Shows a syntax-highlighted "Hello
   world" in C.  */

using ffi, gtk, glib;
using gtksv, gtksvlangmgr;

// Convenience function to create a reference to a pointer value.
ptr p::pointer = sentry free q when
  q = malloc SIZEOF_POINTER; put_pointer q p;
end;

// Initialize. This also passes arguments to GTK.
let argcp, argvp = {argc}, byte_cstring_pointer argv;
gtk::init argcp (ptr argvp);

// Convenience macro to connect a signal to a callback.
def signal_connect instance signal c_handler data =
  glib::signal_connect_data instance signal c_handler data NULL 0;

// Convenience macros to create C callbacks via ffi.
def callback cb = fclos cb FFI_DEFAULT_ABI void_t (pointer_t, pointer_t);
def event_callback cb = fclos cb FFI_DEFAULT_ABI sint_t
			(pointer_t, pointer_t, pointer_t);

// Callback definitions.
delete_event (widget, event, data) =
  glib::print "Exiting.\n" $$ false;
destroy (widget, data) = gtk::main_quit;
hello (widget, data) = glib::print "Hello, world!\n";

// We turn these into C callbacks so that we can pass them to GTK.
let delete_cb = event_callback delete_event;
let destroy_cb = callback destroy;
let hello_cb = callback hello;

// The main routine.
main = gtk::main // enter the main loop
when
  // Create the main window and define some window properties.
  window = gtk::window_new gtk::WINDOW_TOPLEVEL;
  gtk::window_set_title window "hello.c - Pure GtkSourceView2 Example";
  gtk::window_set_default_size window 600 200;
  gtk::container_set_border_width window 10;

  // Create the source view, fill its buffer with "Hello world" C program,
  // and set the buffer's language to C.
  sourceView = gtksv::source_view_new;
  sourceBuffer = gtk::text_view_get_buffer sourceView;
  bufferContent = "#include <stdio.h>\n" + "\n" +
    "void main()\n" +
    "{\n" +
    "    puts(\"Hello world\");\n" +
    "}\n";
  gtk::text_buffer_set_text sourceBuffer bufferContent (#bufferContent);
  langMgr = gtksv::source_language_manager_get_default;
  srcLang = gtksv::source_language_manager_get_language langMgr "c";
  gtksv::source_buffer_set_language sourceBuffer srcLang;

  gtk::container_add window sourceView;

  // Connect the callbacks to the corresponding signals.
  signal_connect window "delete_event" delete_cb NULL;
  signal_connect window "destroy" destroy_cb NULL;

  // Show the main window.
  gtk::widget_show sourceView;
  gtk::widget_show window;
end;

if compiling then () else main;
